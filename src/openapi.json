{
  "openapi": "3.0.0",
  "info": {
    "title": "Guardian API",
    "version": "1.0.0",
    "description": "API documentation for the Guardian Monitoring App"
  },
  "paths": {
    "/api/v1/nurse/register": {
      "post": {
        "summary": "Register a new nurse",
        "tags": ["Nurse"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password"],
                "properties": {
                  "name": { "type": "string" },
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Nurse registered successfully" },
          "400": { "description": "Error registering nurse" }
        }
      }
    },
   "/api/v1/nurse/login": {
      "post": {
        "summary": "Login nurse",
        "tags": ["Nurse"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string" },
                  "password": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login successful" },
          "400": { "description": "Invalid credentials" }
        }
      }
    },
    "/nurse/patients": {
      "get": {
        "summary": "Get patients assigned to the nurse",
        "tags": ["Nurse"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of assigned patients" },
          "400": { "description": "Error fetching patients" }
        }
      }
    },
    "/nurse/tasks": {
      "post": {
        "summary": "Create a task for a caretaker",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["description", "dueDate", "priority", "caretakerId", "patientId"],
                "properties": {
                  "description": { "type": "string" },
                  "dueDate": { "type": "string", "format": "date" },
                  "priority": { "type": "string", "enum": ["low", "medium", "high"] },
                  "caretakerId": { "type": "string" },
                  "patientId": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Task created successfully" },
          "400": { "description": "Error creating task" }
        }
      }
    },
    "/nurse/care-plan/{patientId}": {
      "post": {
        "summary": "Create or update a care plan",
        "tags": ["Care Plans"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "schema": { "type": "string" },
            "required": true,
            "description": "The ID of the patient"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tasks": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Care plan created/updated successfully" },
          "400": { "description": "Error creating/updating care plan" }
        }
      }
    },
    "/nurse/dailyreports/{patientId}": {
      "get": {
        "summary": "Get care plan for a patient",
        "tags": ["Care Plans"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "in": "path",
            "name": "patientId",
            "schema": { "type": "string" },
            "required": true,
            "description": "The ID of the patient"
          }
        ],
        "responses": {
          "200": { "description": "Care plan details" },
          "400": { "description": "Error fetching care plan" }
        }
      }
    },
    "/nurse/reports": {
      "get": {
        "summary": "Get daily reports submitted by caretakers",
        "tags": ["Reports"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": { "description": "List of reports" },
          "400": { "description": "Error fetching reports" }
        }
      }
    },
    "/api/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "lastPasswordChange": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
